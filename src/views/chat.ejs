<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>DON Chat</title>
  <link rel="stylesheet" href="<%= stylePath %>">
</head>
<body>
  <div class="title-bar">
    DON Chat
    <a href="/settings" class="settings-icon">&#9881;</a>
  </div>
  <div class="chat-container" id="chat-container">
    <%- chatHtml %>
  </div>
  <div class="input-container">
    <form action="/ask" method="post" onsubmit="showLoading()" class="ask-form">
      <input type="text" id="question" name="question" placeholder="Type your question here..." class="question-input">
      <button type="submit">Ask</button>
    </form>
    <form action="/clear" method="post" style="margin-left: 10px;">
      <button type="submit">Clear Chat</button>
    </form>
  </div>
  <div id="loading">‚è≥ Loading...</div>

  <!-- The Modal -->
  <div id="flagModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeModal()">&times;</span>
      <h2>Flagging Reason</h2>
      <select id="flagReason">
        <% flagReasons.forEach(reason => { %>
          <option value="<%= reason %>"><%= reason.charAt(0).toUpperCase() + reason.slice(1) %></option>
        <% }) %>
      </select>
      <button onclick="submitFlag()">Submit</button>
    </div>
  </div>

  <script>
    // VSCode EJS extension does not support scriptlet tags, so we need to manually insert the chat history
    const chatHistory = <%- JSON.stringify(chatHistory) %>;

    function showLoading() {
      document.getElementById('loading').style.display = 'block';
    }

    function scrollToBottom() {
      const chatContainer = document.getElementById('chat-container');
      chatContainer.scrollTop = chatContainer.scrollHeight;
    }

    window.onload = scrollToBottom;

    function sendFeedback(index, feedback) {
      if (feedback === 'flagged') {
        openModal(index);
      } else {
        fetch('/feedback', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ index, feedback })
        }).then(response => {
          if (response.ok) {
            console.log('Feedback sent successfully');
          } else {
            console.error('Failed to send feedback');
          }
        });
      }
    }

    function openModal(index) {
      const modal = document.getElementById('flagModal');
      modal.style.display = 'block';
      modal.setAttribute('data-index', index);

      // Pre-select the current flagging reason if it exists
      const entry = chatHistory[index];
      if (entry && entry.flagReason) {
        document.getElementById('flagReason').value = entry.flagReason;
      } else {
        document.getElementById('flagReason').value = 'inaccurate'; // Default value
      }
    }

    function closeModal() {
      const modal = document.getElementById('flagModal');
      modal.style.display = 'none';
    }

    function submitFlag() {
      const modal = document.getElementById('flagModal');
      const index = modal.getAttribute('data-index');
      const reason = document.getElementById('flagReason').value;
      fetch('/feedback', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ index, feedback: 'flagged', reason })
      }).then(response => {
        if (response.ok) {
          console.log('Flagging reason sent successfully');
          closeModal();
        } else {
          console.error('Failed to send flagging reason');
        }
      });
    }

    window.onclick = function(event) {
      const modal = document.getElementById('flagModal');
      if (event.target == modal) {
        modal.style.display = 'none';
      }
    }
  </script>
</body>
</html>